@inject IProductServices ProductService
@implements IDisposable

<h5>Shop</h5>
@if(ProductService.Products == null || ProductService.Products.Count == 0){
    <span>Loading......</span>
}
else{
    <div class="container text-center">
    
        <div class="row">
            @foreach (var product in ProductService.Products){
                <div class="col">
                    <a href="/product/@product.Id">
                    <h2><b>@product.Title<br></b></h2>
                    <img src="@product.ImageUrl" alt="@product.Id" class="movieImage"/>
                    </a>
                    <p>@product.Description</p>
                    Rs @product.Price
                </div>
            }
        
        </div>
    </div>
}

@code {
    protected override void OnInitialized()
    {
        //action to invoke when there is a change in the data
        ProductService.OnProductChange += StateHasChanged;
    }
    public void Dispose(){
        ProductService.OnProductChange -= StateHasChanged;
    }
}
