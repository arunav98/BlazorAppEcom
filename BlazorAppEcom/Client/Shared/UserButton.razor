@using Microsoft.AspNetCore.WebUtilities
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ILocalStorageService LocalStorage
@inject ICartService CartService

<div class="dropdown">
    <button @onclick="ToggleUserMenu"
        @onfocusout="HideUserMenu"
        class="btn btn-secondary dropdown-toggle user-button">
        <i class="oi oi-person"></i>
        <div class="dropdown-menu dropdown-menu-left @UserMenuCssClass">
            <AuthorizeView>
                <Authorized>

                    <a href="profile" class="dropdown-item">Profile</a>
                    <hr />
                    <button @onclick="Logout" class="dropdown-item">LogOut</button>
                </Authorized>
                <NotAuthorized>
                    <a href="register" class="dropdown-item">Register</a>
                    <a href="login?returnUrl=@NavigationManager.ToBaseRelativePath(NavigationManager.Uri)" class="dropdown-item">Login</a>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </button>
</div>

@code {
    private bool showUserMenu = false;
    private string UserMenuCssClass => showUserMenu ? "show-menu" : null;


    private void ToggleUserMenu(){
        showUserMenu = !showUserMenu;
    }

    public async Task HideUserMenu(){
        await Task.Delay(200);
        showUserMenu = false;
    }

    public async Task Logout(){
        await LocalStorage.RemoveItemAsync("authToken");
        await CartService.GetItemCount();
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("login");
    }

}
